import ddf.minim.*;
import ddf.minim.analysis.*;
import ddf.minim.effects.*;
import ddf.minim.signals.*;
import ddf.minim.spi.*;
import ddf.minim.ugens.*;

Minim minim;
AudioBuffer ab;
AudioPlayer ap;
AudioInput ai;
void setup()
{
  size(1024, 500);
  
  minim = new Minim(this);
  ai = minim.getLineIn(Minim.MONO,1024,44100, 16);
  ap = minim.loadFile("Neon Trees ft Kaskade - Lessons In Love.mp3");
  ap.play();
  ab = ap.mix;
  
  int[] arr = {10, 15, 7, 9, 12, 17};
  
  float sum = 0;
  for(int i = 0 ; i < arr.length; i ++)
  {
    sum +=arr[i];
  }
  
  float average = sum / (float)arr.length;
}
float lerpedAverage = 0; 

void draw()
{
  background(0);
  stroke(255);
  float sum = 0;
  for(int i = 0 ; i < ab.size(); i ++)
  {
    //line(i, height/2, i,(height/2)+ ab.get(i)250);
    sum +=abs(ab.get(i));
  }
  float average = sum / (float)ab.size();
  lerpedAverage = lerp(lerpedAverage, average, 0.1f);
  
  fill(212,175,55); //gold
  rect(0,0,502,lerpedAverage*1000);
  rect(522,0,502,lerpedAverage*1000);
  
  //left triangle
  fill(0,55,255); //blue
  triangle(512, 20, 100, 166, 512, 480);
  
  //inner left triangle
  fill(0,255,225); //turquoise
  triangle(512, 20, 250, 166, 512, 480);
  
  //centre left triangle
  fill(0,55,255); //blue
  triangle(512, 20, 392, 166, 512, 480);
  
 //right triangle
  fill(0,55,255); //blue
  triangle(512, 20, 924, 166, 512, 480);
  
  //inner right triangle
  fill(0,255,225); //turquoise
  triangle(512, 20, 774, 166, 512, 480);
  
  //centre right triangle
  fill(0,55,255); //blue
  triangle(512, 20, 632, 166, 512, 480);
  
  fill(162, 0, 255); //purple
  circle(164, 380, lerpedAverage*800);
  fill(162, 0, 255); //purple
  circle(860, 380,lerpedAverage*800);
  fill(57,255,20); //neon green
  rect(507,500,10,-lerpedAverage*1000);
}
